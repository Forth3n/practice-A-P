import unittest
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

class TestKeyboards(unittest.TestCase):

    def test_main_keyboard(self):
        main = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ö–∞–∫–æ–π —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∞–∑–¥–Ω–∏–∫?")],
                [KeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–∏—á–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å")]
            ],
            resize_keyboard=True
        )
        self.assertEqual(len(main.keyboard), 2)
        self.assertEqual(main.keyboard[0][0].text, "–ö–∞–∫–æ–π —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∞–∑–¥–Ω–∏–∫?")
        self.assertEqual(main.keyboard[1][0].text, "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–∏—á–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å")

    def test_choose_date_keyboard(self):
        choose_date = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üìÖ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –¥–∞—Ç—É", callback_data="choose_another_date")]
            ]
        )
        self.assertEqual(len(choose_date.inline_keyboard), 1)
        self.assertEqual(choose_date.inline_keyboard[0][0].text, "üìÖ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –¥–∞—Ç—É")

    def test_personal_calendar_keyboard(self):
        personal_calendar_kb = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∞–∑–¥–Ω–∏–∫", callback_data="add_personal_holiday")]
            ]
        )
        self.assertEqual(len(personal_calendar_kb.inline_keyboard), 1)
        self.assertEqual(personal_calendar_kb.inline_keyboard[0][0].text, "‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∞–∑–¥–Ω–∏–∫")

if __name__ == "__main__":
    unittest.main()
